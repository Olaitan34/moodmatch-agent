# ============================================================================
# MoodMatch A2A Agent - Environment Configuration
# ============================================================================
# Copy this file to .env and fill in your actual API keys and credentials
# DO NOT commit the .env file to version control!
# ============================================================================

# ----------------------------------------------------------------------------
# Server Configuration
# ----------------------------------------------------------------------------
# Host address for the FastAPI server
HOST=0.0.0.0

# Port number for the FastAPI server
PORT=8000

# Environment mode (development, production, testing)
ENVIRONMENT=development

# Log level (DEBUG, INFO, WARNING, ERROR, CRITICAL)
LOG_LEVEL=INFO

# ----------------------------------------------------------------------------
# A2A Protocol Configuration
# ----------------------------------------------------------------------------
# Deployment type: "blocking" for synchronous responses, "webhook" for async
# blocking: Agent responds immediately with results
# webhook: Agent returns task ID, sends results to callback URL when ready
DEPLOYMENT_TYPE=blocking

# Webhook URL for async responses (only needed if DEPLOYMENT_TYPE=webhook)
# WEBHOOK_URL=https://your-callback-endpoint.com/webhook

# A2A Protocol version
A2A_VERSION=1.0

# ----------------------------------------------------------------------------
# Google Gemini AI Configuration (for Mood Analysis)
# ----------------------------------------------------------------------------
# Get your API key from: https://aistudio.google.com/app/apikey
# Click "Get API Key" -> "Create API Key" -> Copy the key
# Free tier: 15 requests per minute, 1500 requests per day
GEMINI_API_KEY=your_gemini_api_key_here

# Gemini model to use (gemini-2.0-flash-exp, gemini-1.5-flash, gemini-1.5-pro)
GEMINI_MODEL=gemini-2.0-flash-exp

# Temperature for LLM responses (0.0-1.0, higher = more creative)
GEMINI_TEMPERATURE=0.7

# Maximum tokens for LLM response
GEMINI_MAX_TOKENS=1000

# ----------------------------------------------------------------------------
# TMDB API Configuration (for Movie Recommendations)
# ----------------------------------------------------------------------------
# Get your API key from: https://www.themoviedb.org/settings/api
# Steps:
# 1. Create account at https://www.themoviedb.org/signup
# 2. Go to Settings -> API
# 3. Request an API key (Developer)
# 4. Fill out the form (choose "Website" or "Educational")
# 5. Copy the "API Key (v3 auth)" value
TMDB_API_KEY=your_tmdb_api_key_here

# TMDB API base URL (v3)
TMDB_BASE_URL=https://api.themoviedb.org/3

# Default language for movie data
TMDB_LANGUAGE=en-US

# Default region for movie data
TMDB_REGION=US

# ----------------------------------------------------------------------------
# Spotify API Configuration (for Music Recommendations)
# ----------------------------------------------------------------------------
# Get your credentials from: https://developer.spotify.com/dashboard
# Steps:
# 1. Log in with your Spotify account
# 2. Create an app: https://developer.spotify.com/dashboard/create
# 3. Enter app name and description
# 4. Copy "Client ID" and "Client Secret"
# 5. Add redirect URI (e.g., http://localhost:8000/callback) in app settings
SPOTIFY_CLIENT_ID=your_spotify_client_id_here
SPOTIFY_CLIENT_SECRET=your_spotify_client_secret_here

# Spotify API redirect URI (must match what's in your Spotify app settings)
SPOTIFY_REDIRECT_URI=http://localhost:8000/callback

# Spotify API scopes (permissions) - space separated
# Current scopes allow reading user's playlists and top tracks
SPOTIFY_SCOPE=user-library-read user-top-read playlist-read-private

# ----------------------------------------------------------------------------
# Google Books API Configuration (for Book Recommendations)
# ----------------------------------------------------------------------------
# Get your API key from: https://console.cloud.google.com/apis/credentials
# Steps:
# 1. Go to Google Cloud Console: https://console.cloud.google.com/
# 2. Create a new project or select existing one
# 3. Enable "Books API": https://console.cloud.google.com/apis/library/books.googleapis.com
# 4. Go to "Credentials" -> "Create Credentials" -> "API Key"
# 5. (Optional) Restrict the key to "Books API" for security
# 6. Copy the generated API key
GOOGLE_BOOKS_API_KEY=your_google_books_api_key_here

# Google Books API base URL
GOOGLE_BOOKS_BASE_URL=https://www.googleapis.com/books/v1

# Maximum results per query
GOOGLE_BOOKS_MAX_RESULTS=10

# ----------------------------------------------------------------------------
# Recommendation Settings
# ----------------------------------------------------------------------------
# Number of recommendations to return per category
MAX_MOVIE_RECOMMENDATIONS=5
MAX_MUSIC_RECOMMENDATIONS=10
MAX_BOOK_RECOMMENDATIONS=5

# Cache TTL in seconds (how long to cache recommendations)
CACHE_TTL=3600

# Enable/disable caching
ENABLE_CACHING=true

# ----------------------------------------------------------------------------
# CORS Configuration
# ----------------------------------------------------------------------------
# Allowed origins for CORS (comma-separated)
# Use "*" for development, specific domains for production
CORS_ORIGINS=http://localhost:3000,http://localhost:8000

# Allow credentials in CORS requests
CORS_ALLOW_CREDENTIALS=true

# ----------------------------------------------------------------------------
# Rate Limiting
# ----------------------------------------------------------------------------
# Enable rate limiting to prevent API abuse
ENABLE_RATE_LIMITING=true

# Maximum requests per minute per IP
RATE_LIMIT_PER_MINUTE=60

# ----------------------------------------------------------------------------
# Security
# ----------------------------------------------------------------------------
# Secret key for JWT tokens or session encryption (generate with: openssl rand -hex 32)
SECRET_KEY=your_secret_key_here_generate_with_openssl_rand_hex_32

# API authentication token (optional, for securing your agent's endpoints)
# API_AUTH_TOKEN=your_bearer_token_here

# ----------------------------------------------------------------------------
# Database Configuration (Optional - for caching/persistence)
# ----------------------------------------------------------------------------
# Uncomment if you want to use a database for caching
# DATABASE_URL=sqlite:///./moodmatch.db
# DATABASE_URL=postgresql://user:password@localhost:5432/moodmatch

# ----------------------------------------------------------------------------
# Monitoring & Analytics (Optional)
# ----------------------------------------------------------------------------
# Uncomment if you want to add monitoring
# SENTRY_DSN=your_sentry_dsn_here
# GOOGLE_ANALYTICS_ID=your_ga_id_here

# ============================================================================
# End of Configuration
# ============================================================================
# Remember to:
# 1. Copy this file to .env
# 2. Replace all placeholder values with your actual credentials
# 3. Never commit the .env file to version control
# 4. Add .env to your .gitignore file
# ============================================================================
